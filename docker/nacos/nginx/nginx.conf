########### 每个指令必须有分号结束。#################
user nginx;  #配置用户或者组，默认为nobody nobody。
worker_processes 1;  #允许生成的进程数，默认为1
pid /var/run/nginx.pid;  #指定nginx进程运行文件存放地址
error_log /var/log/nginx/error.log warn;  #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别依次为：debug|info|notice|warn|error|crit|alert|emerg

events {
    accept_mutex on;   #设置网路连接序列化，防止惊群现象发生
    multi_accept on;  #设置一个进程是否同时接受多个网络连接
    #use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport
    worker_connections  1024;    #最大连接数
}

http {
    include /etc/nginx/mime.types;   #文件扩展名与文件类型映射表
    default_type application/octet-stream; #默认文件类型，默认为text/plain
    #access_log off; #取消服务日志    
    log_format main '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'; #日志格式
    access_log  /var/log/nginx/access.log  main;  #设为日志格式的默认值
    sendfile on;   #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
    #sendfile_max_chunk 100k;  #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。
    keepalive_timeout 65;  #连接超时时间，可以在http，server，location块。
    proxy_connect_timeout 2;   #nginx服务器与被代理的服务器建立连接的超时时间，默认60秒
	proxy_read_timeout 2; #nginx服务器向被代理服务器组发出read请求后，等待响应的超时间，默认为60秒。
	proxy_send_timeout 2; #nginx服务器向被代理服务器组发出write请求后，等待响应的超时间，默认为60秒。
	#proxy_http_version 1.0 ; #Nginx服务器提供代理服务的http协议版本1.0，1.1，默认设置为1.0版本。
	#proxy_method get;    #支持客户端的请求方法。post/get；
	proxy_ignore_client_abort on;  #客户端断网时，nginx服务器是否中断对被代理服务器的请求。默认为off。
	#proxy_ignore_headers "Expires" "Set-Cookie";  #Nginx服务器不处理设置的http响应头信息，这里空格隔开可以设置多个。
	proxy_intercept_errors on;    #如果被代理服务器返回的状态码为400或者大于400，设置的error_page配置起作用。默认为off。
	proxy_headers_hash_max_size 1024; #存放http报文头的哈希表容量上限，默认为512个字符。
	proxy_headers_hash_bucket_size 128; #nginx服务器申请存放http报文头的哈希表容量大小。默认为64个字符。
	proxy_next_upstream timeout;  #反向代理upstream中设置的服务器组，出现故障时，被代理服务器返回的状态值。error|timeout|invalid_header|http_500|http_502|http_503|http_504|http_404|off
	#proxy_ssl_session_reuse on; 默认为on，如果我们在错误日志中发现“SSL3_GET_FINSHED:digest check failed”的情况时，可以将该指令设置为off。	
    #error_page 404 https://www.baidu.com; #自定义跳转错误页

    #nacos集群负载均衡
    upstream nacos-cluster{   
      server nacos1:8848;
      server nacos2:8848;
      server nacos3:8848;
    }
    
    server {
        #keepalive_requests 120; #单连接请求上限次数。
        listen 80;   #监听端口
        #server_name www.exampe.com;  #监听地址  
        
        #反向代理nacos集群
        location /nacos-cluster/{       #请求的url匹配。
           proxy_pass  http://nacos-cluster/;  #请求转向指定集群 (结尾有"/"替换location，无"/"只替换host)
        }   
        
        #默认页，检查启动成功  
        location /{       #请求的url匹配。
           root /usr/share/nginx/html;  #根目录
           index build_success.html;  #设置默认页
           #proxy_pass  http://group;  #请求转向指定集群
           #deny 127.0.0.1;  #拒绝的ip
           #allow 172.18.5.54; #允许的ip           
        } 
    }
}